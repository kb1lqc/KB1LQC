%!PS-Adobe-3.0
%%Creator: gEDA gschem 1.6.1-20100214-22-ga30f00b
%%CreationDate: Thu Mar 29 01:37:42 2012
%%Title: /home/bryce/KB1LQC/gaf/projects/pwmtov/pwmtov.sch
%%Author: bryce
%%BoundingBox: 0 0 612 792
%%Orientation: Landscape
%%Pages: 1
%%Endcomments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def

% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def

% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def

    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)

    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def

                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def

                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append

    grestore
    show
} bind def

% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
7485 499 translate 90 rotate
0.588235 0.588235 scale
-40100 -40600 translate
gsave
40100 40600 57100 40600 10 line
57100 40600 57100 51600 10 line
57100 51600 40100 51600 10 line
40100 51600 40100 40600 10 line
52800 41400 52800 40800 10 line
gsave
false false false false 208.000000 [(FILE:) ] 0 49400 41200 144.444443 text
grestore
gsave
false false false false 208.000000 [(REVISION:) ] 0 52900 41200 144.444443 text
grestore
gsave
false false false false 208.000000 [(DRAWN BY: ) ] 0 52900 40900 144.444443 text
grestore
gsave
false false false false 208.000000 [(PAGE) ] 0 49400 40900 144.444443 text
grestore
gsave
false false false false 208.000000 [(OF) ] 0 51100 40900 144.444443 text
grestore
gsave
false false false false 208.000000 [(TITLE) ] 0 49400 41500 144.444443 text
grestore
49300 40800 56900 40800 10 line
56900 40800 56900 42200 10 line
56900 42200 49300 42200 10 line
49300 42200 49300 40800 10 line
49300 41400 56900 41400 10 line
40300 40800 56900 40800 10 line
56900 40800 56900 51400 10 line
56900 51400 40300 51400 10 line
40300 51400 40300 40800 10 line
40300 42600 40100 42600 10 line
40300 44600 40100 44600 10 line
40300 46600 40100 46600 10 line
40300 48600 40100 48600 10 line
42100 40800 42100 40600 10 line
44100 40800 44100 40600 10 line
46100 40800 46100 40600 10 line
48100 40800 48100 40600 10 line
50100 40800 50100 40600 10 line
gsave
true false true false 208.000000 [(A) ] 0 40200 41600 144.444443 text
grestore
gsave
true false true false 208.000000 [(B) ] 0 40200 43600 144.444443 text
grestore
gsave
true false true false 208.000000 [(C) ] 0 40200 45600 144.444443 text
grestore
gsave
true false true false 208.000000 [(D) ] 0 40200 47600 144.444443 text
grestore
gsave
true false true false 208.000000 [(1) ] 0 41100 40700 144.444443 text
grestore
gsave
true false true false 208.000000 [(2) ] 0 43100 40700 144.444443 text
grestore
gsave
true false true false 208.000000 [(3) ] 0 45100 40700 144.444443 text
grestore
gsave
true false true false 208.000000 [(4) ] 0 47100 40700 144.444443 text
grestore
gsave
true false true false 208.000000 [(5) ] 0 49100 40700 144.444443 text
grestore
40300 50600 40100 50600 10 line
gsave
true false true false 208.000000 [(E) ] 0 40200 49600 144.444443 text
grestore
gsave
true false true false 208.000000 [(F) ] 0 40200 51100 144.444443 text
grestore
52100 40800 52100 40600 10 line
54100 40800 54100 40600 10 line
gsave
true false true false 208.000000 [(6) ] 0 51100 40700 144.444443 text
grestore
gsave
true false true false 208.000000 [(7) ] 0 53100 40700 144.444443 text
grestore
gsave
true false true false 208.000000 [(8) ] 0 55100 40700 144.444443 text
grestore
56100 40800 56100 40600 10 line
gsave
true false true false 208.000000 [(9) ] 0 56600 40700 144.444443 text
grestore
57100 50600 56900 50600 10 line
57100 48600 56900 48600 10 line
57100 46600 56900 46600 10 line
57100 44600 56900 44600 10 line
57100 42600 56900 42600 10 line
gsave
true false true false 208.000000 [(A) ] 0 57000 41600 144.444443 text
grestore
gsave
true false true false 208.000000 [(B) ] 0 57000 43600 144.444443 text
grestore
gsave
true false true false 208.000000 [(C) ] 0 57000 45600 144.444443 text
grestore
gsave
true false true false 208.000000 [(D) ] 0 57000 47600 144.444443 text
grestore
gsave
true false true false 208.000000 [(E) ] 0 57000 49600 144.444443 text
grestore
gsave
true false true false 208.000000 [(F) ] 0 57000 51100 144.444443 text
grestore
42100 51600 42100 51400 10 line
44100 51600 44100 51400 10 line
46100 51600 46100 51400 10 line
48100 51600 48100 51400 10 line
50100 51600 50100 51400 10 line
52100 51600 52100 51400 10 line
54100 51600 54100 51400 10 line
56100 51600 56100 51400 10 line
gsave
true false true false 208.000000 [(1) ] 0 41100 51500 144.444443 text
grestore
gsave
true false true false 208.000000 [(2) ] 0 43100 51500 144.444443 text
grestore
gsave
true false true false 208.000000 [(3) ] 0 45100 51500 144.444443 text
grestore
gsave
true false true false 208.000000 [(4) ] 0 47100 51500 144.444443 text
grestore
gsave
true false true false 208.000000 [(5) ] 0 49100 51500 144.444443 text
grestore
gsave
true false true false 208.000000 [(6) ] 0 51100 51500 144.444443 text
grestore
gsave
true false true false 208.000000 [(7) ] 0 53100 51500 144.444443 text
grestore
gsave
true false true false 208.000000 [(8) ] 0 55100 51500 144.444443 text
grestore
gsave
true false true false 208.000000 [(9) ] 0 56600 51500 144.444443 text
grestore
grestore
gsave
43700 48600 43600 48400 10 line
43600 48400 43500 48600 10 line
43500 48600 43400 48400 10 line
43400 48400 43300 48600 10 line
43700 48600 43800 48400 10 line
43800 48400 43850 48500 10 line
44000 48500 43850 48500 10 line
43100 48500 43252 48500 10 line
43301 48600 43250 48500 10 line
grestore
gsave
false false false false 260.000000 [(R101) ] 0 43300 48700 180.555557 text
grestore
gsave
false false false false 260.000000 [(100K) ] 0 43300 48200 180.555557 text
grestore
gsave
46700 46900 46900 46900 10 line
gsave
false true false false 208.000000 [(1) ] 0 46850 46950 144.444443 text
grestore
47600 46900 47400 46900 10 line
gsave
false false false false 208.000000 [(2) ] 0 47450 46950 144.444443 text
grestore
47100 47100 47100 46700 10 line
47400 46900 47200 46900 10 line
47100 46900 46900 46900 10 line
47900 46900 700 165 195 10 darc
46989 47100 46989 47000 10 line
47040 47049 46940 47049 10 line
grestore
gsave
false false false false 260.000000 [(C101) ] 0 46900 47200 180.555557 text
grestore
gsave
false false false false 260.000000 [(0.01uF) ] 0 46900 46500 180.555557 text
grestore
gsave
43300 50600 43500 50600 10 line
42700 50700 42700 50500 10 line
42700 50700 43200 50700 10 line
43200 50700 43300 50600 10 line
43300 50600 43200 50500 10 line
43200 50500 42700 50500 10 line
grestore
gsave
false true true false 260.000000 [(Vpulse) ] 0 42600 50600 180.555557 text
grestore
gsave
54100 45300 54300 45300 10 line
54300 45400 54300 45200 10 line
54300 45400 54800 45400 10 line
54800 45400 54900 45300 10 line
54900 45300 54800 45200 10 line
54800 45200 54300 45200 10 line
grestore
gsave
false false true false 260.000000 [(Vpulsedc) ] 0 55000 45300 180.555557 text
grestore
gsave
43600 45800 43500 45600 10 line
43500 45600 43400 45800 10 line
43400 45800 43300 45600 10 line
43300 45600 43200 45800 10 line
43600 45800 43700 45600 10 line
43700 45600 43750 45700 10 line
43900 45700 43750 45700 10 line
43000 45700 43152 45700 10 line
43201 45800 43150 45700 10 line
grestore
gsave
false false false false 260.000000 [(R102) ] 0 43200 45900 180.555557 text
grestore
gsave
false false false false 260.000000 [(49.9K) ] 0 43200 45400 180.555557 text
grestore
gsave
45700 44500 45600 44300 10 line
45600 44300 45500 44500 10 line
45500 44500 45400 44300 10 line
45400 44300 45300 44500 10 line
45700 44500 45800 44300 10 line
45800 44300 45850 44400 10 line
46000 44400 45850 44400 10 line
45100 44400 45252 44400 10 line
45301 44500 45250 44400 10 line
grestore
gsave
false false false false 260.000000 [(R103) ] 0 45300 44600 180.555557 text
grestore
gsave
false false false false 260.000000 [(19.1K) ] 0 45300 44100 180.555557 text
grestore
gsave
47000 44500 46900 44300 10 line
46900 44300 46800 44500 10 line
46800 44500 46700 44300 10 line
46700 44300 46600 44500 10 line
47000 44500 47100 44300 10 line
47100 44300 47150 44400 10 line
47300 44400 47150 44400 10 line
46400 44400 46552 44400 10 line
46601 44500 46550 44400 10 line
grestore
gsave
false false false false 260.000000 [(R104) ] 0 46600 44600 180.555557 text
grestore
gsave
false false false false 260.000000 [(78.7K) ] 0 46600 44100 180.555557 text
grestore
gsave
46300 49200 46200 49000 10 line
46200 49000 46100 49200 10 line
46100 49200 46000 49000 10 line
46000 49000 45900 49200 10 line
46300 49200 46400 49000 10 line
46400 49000 46450 49100 10 line
46600 49100 46450 49100 10 line
45700 49100 45852 49100 10 line
45901 49200 45850 49100 10 line
grestore
gsave
false false false false 260.000000 [(R105) ] 0 45900 49300 180.555557 text
grestore
gsave
false false false false 260.000000 [(10K) ] 0 45900 48800 180.555557 text
grestore
gsave
50400 45100 50400 44900 10 line
gsave
false true false false 208.000000 [(1) ] 270 50450 44950 144.444443 text
grestore
50400 44200 50400 44400 10 line
gsave
false false false false 208.000000 [(2) ] 270 50450 44350 144.444443 text
grestore
50600 44700 50200 44700 10 line
50400 44400 50400 44600 10 line
50400 44700 50400 44900 10 line
50400 43900 700 75 105 10 darc
50600 44811 50500 44811 10 line
50549 44760 50549 44860 10 line
grestore
gsave
false false false false 260.000000 [(C102) ] 270 50700 44900 180.555557 text
grestore
gsave
false false false false 260.000000 [(0.01uF) ] 0 49500 44600 180.555557 text
grestore
gsave
52600 46000 52600 45800 10 line
52500 46000 52700 46000 10 line
52555 46050 52645 46050 10 line
52580 46090 52620 46090 10 line
grestore
gsave
47300 44800 47300 45000 10 line
47200 44800 47400 44800 10 line
47255 44750 47345 44750 10 line
47280 44710 47320 44710 10 line
grestore
gsave
47400 44000 47400 44200 10 line
47300 44000 47500 44000 10 line
47355 43950 47445 43950 10 line
47380 43910 47420 43910 10 line
grestore
47400 44200 47400 44400 10 line
47400 44400 47300 44400 10 line
46400 44400 46000 44400 10 line
46700 45300 46200 45300 10 line
46200 45300 46200 44400 10 line
53200 45300 54100 45300 10 line
53500 43700 53500 45300 10 line
52000 43700 52000 45100 10 line
45500 49100 45700 49100 10 line
46300 45700 46300 47800 10 line
46300 46900 46700 46900 10 line
44900 45700 46700 45700 10 line
48200 45500 48200 47800 10 line
48200 46900 47600 46900 10 line
47900 45500 49200 45500 10 line
45100 44400 45000 44400 10 line
45000 44400 45000 44500 10 line
gsave
51200 43600 51100 43400 10 line
51100 43400 51000 43600 10 line
51000 43600 50900 43400 10 line
50900 43400 50800 43600 10 line
51200 43600 51300 43400 10 line
51300 43400 51350 43500 10 line
51500 43500 51350 43500 10 line
50600 43500 50752 43500 10 line
50801 43600 50750 43500 10 line
grestore
gsave
false false false false 260.000000 [(R106) ] 0 50800 43700 180.555557 text
grestore
gsave
false false false false 260.000000 [(5K) ] 0 50800 43200 180.555557 text
grestore
gsave
50000 43600 49900 43400 10 line
49900 43400 49800 43600 10 line
49800 43600 49700 43400 10 line
49700 43400 49600 43600 10 line
50000 43600 50100 43400 10 line
50100 43400 50150 43500 10 line
50300 43500 50150 43500 10 line
49400 43500 49552 43500 10 line
49601 43600 49550 43500 10 line
grestore
gsave
false false false false 260.000000 [(R107) ] 0 49600 43700 180.555557 text
grestore
gsave
false false false false 260.000000 [(5K) ] 0 49600 43200 180.555557 text
grestore
gsave
51600 43100 51600 43300 10 line
51500 43100 51700 43100 10 line
51555 43050 51645 43050 10 line
51580 43010 51620 43010 10 line
grestore
49100 43500 49400 43500 10 line
50300 43500 50600 43500 10 line
51500 43500 51600 43500 10 line
51600 43500 51600 43300 10 line
50400 44200 50400 43500 10 line
50400 45100 50400 45500 10 line
50000 45500 52000 45500 10 line
42800 48500 43100 48500 10 line
43500 50600 49600 50600 10 line
44500 46200 44500 50600 10 line
42700 45700 43000 45700 10 line
gsave
44100 45700 44300 45700 10 line
gsave
false true false false 260.000000 [(3) ] 0 44100 45800 180.555557 text
grestore
44900 45700 44700 45700 10 line
gsave
false false false false 260.000000 [(2) ] 0 44900 45800 180.555557 text
grestore
44700 45700 44400 45900 10 line
44200 45600 44800 45600 10 line
44800 45600 44800 46000 10 line
44800 46000 44200 46000 10 line
44200 46000 44200 45600 10 line
44500 46200 44500 46000 10 line
gsave
false true false true 260.000000 [(1) ] 0 44700 46200 180.555557 text
grestore
gsave
false false false false 260.000000 [(LTC202) ] 0 44200 45400 180.555557 text
grestore
44350 45702 50 0 360 10 darc
grestore
gsave
false false false false 260.000000 [(U101) ] 0 44800 46200 180.555557 text
grestore
gsave
47600 49100 47800 49100 10 line
gsave
false true false false 260.000000 [(6) ] 0 47600 49200 180.555557 text
grestore
48400 49100 48200 49100 10 line
gsave
false false false false 260.000000 [(7) ] 0 48400 49200 180.555557 text
grestore
48200 49100 47900 49300 10 line
47700 49000 48300 49000 10 line
48300 49000 48300 49400 10 line
48300 49400 47700 49400 10 line
47700 49400 47700 49000 10 line
48000 49600 48000 49400 10 line
gsave
false true false true 260.000000 [(8) ] 0 48200 49600 180.555557 text
grestore
gsave
false false false false 260.000000 [(LTC202) ] 0 47700 48800 180.555557 text
grestore
47850 49102 50 0 360 10 darc
grestore
gsave
false false false false 260.000000 [(U101) ] 0 48300 49600 180.555557 text
grestore
gsave
49200 45500 49400 45500 10 line
gsave
false true false false 260.000000 [(14) ] 0 49200 45600 180.555557 text
grestore
50000 45500 49800 45500 10 line
gsave
false false false false 260.000000 [(15) ] 0 50000 45600 180.555557 text
grestore
49800 45500 49500 45700 10 line
49300 45400 49900 45400 10 line
49900 45400 49900 45800 10 line
49900 45800 49300 45800 10 line
49300 45800 49300 45400 10 line
49600 46000 49600 45800 10 line
gsave
false true false true 260.000000 [(16) ] 0 49800 46000 180.555557 text
grestore
gsave
false false false false 260.000000 [(LTC202) ] 0 49300 45200 180.555557 text
grestore
49450 45502 50 0 360 10 darc
grestore
gsave
false false false false 260.000000 [(U101) ] 0 49900 46000 180.555557 text
grestore
43900 45700 44100 45700 10 line
46300 47800 46800 47800 10 line
47600 47800 48200 47800 10 line
46600 49100 47600 49100 10 line
47200 49100 47200 48300 10 line
44000 48500 44500 48500 10 line
48000 49600 48000 50600 10 line
49600 50600 49600 46000 10 line
gsave
52900 43800 52800 43600 10 line
52800 43600 52700 43800 10 line
52700 43800 52600 43600 10 line
52600 43600 52500 43800 10 line
52900 43800 53000 43600 10 line
53000 43600 53050 43700 10 line
53200 43700 53050 43700 10 line
52300 43700 52452 43700 10 line
52501 43800 52450 43700 10 line
grestore
gsave
false false false false 260.000000 [(R108) ] 0 52500 43900 180.555557 text
grestore
gsave
false false false false 260.000000 [(0) ] 0 52600 43400 180.555557 text
grestore
52000 43700 52300 43700 10 line
53200 43700 53500 43700 10 line
gsave
48600 48800 48600 49000 10 line
48500 48800 48700 48800 10 line
48555 48750 48645 48750 10 line
48580 48710 48620 48710 10 line
grestore
48600 49000 48600 49100 10 line
48600 49100 48400 49100 10 line
gsave
false false false false 312.000000 [(1) ] 0 50300 40900 216.666672 text
grestore
gsave
false false false false 312.000000 [(pwmtov.sch) ] 0 50600 41200 216.666672 text
grestore
gsave
false false false false 312.000000 [(PWM To Voltage Converter) ] 0 51700 41700 216.666672 text
grestore
gsave
false false false false 312.000000 [(1.1) ] 0 55000 41200 216.666672 text
grestore
gsave
false false false false 312.000000 [(Bryce Salmi - KB1LQC) ] 0 54100 40900 216.666672 text
grestore
gsave
47000 45900 47000 45100 10 line
47000 45100 47600 45500 10 line
47000 45900 47600 45500 10 line
47900 45500 47600 45500 10 line
gsave
false false false false 260.000000 [(1) ] 0 47700 45600 180.555557 text
grestore
47300 46000 47300 45700 10 line
gsave
false false false true 260.000000 [(V+) ] 0 47400 45900 180.555557 text
grestore
47300 45000 47300 45300 10 line
gsave
false false false false 260.000000 [(V-) ] 0 47400 45100 180.555557 text
grestore
46700 45300 47000 45300 10 line
gsave
false false false false 260.000000 [(-) ] 0 47100 45300 180.555557 text
grestore
gsave
false false false false 260.000000 [(4) ] 0 46800 45400 180.555557 text
grestore
46700 45700 47000 45700 10 line
gsave
false false false false 260.000000 [(+) ] 0 47100 45600 180.555557 text
grestore
gsave
false false false false 260.000000 [(3) ] 0 46800 45800 180.555557 text
grestore
gsave
false false false false 260.000000 [(LT1880) ] 0 47700 45000 180.555557 text
grestore
grestore
gsave
false false false false 260.000000 [(U102) ] 0 47600 45800 180.555557 text
grestore
gsave
52300 45700 52300 44900 10 line
52300 44900 52900 45300 10 line
52300 45700 52900 45300 10 line
53200 45300 52900 45300 10 line
gsave
false false false false 260.000000 [(1) ] 0 53000 45400 180.555557 text
grestore
52600 45800 52600 45500 10 line
gsave
false false false true 260.000000 [(V+) ] 0 52700 45700 180.555557 text
grestore
52600 44800 52600 45100 10 line
gsave
false false false false 260.000000 [(V-) ] 0 52700 44900 180.555557 text
grestore
52000 45100 52300 45100 10 line
gsave
false false false false 260.000000 [(-) ] 0 52400 45100 180.555557 text
grestore
gsave
false false false false 260.000000 [(4) ] 0 52100 45200 180.555557 text
grestore
52000 45500 52300 45500 10 line
gsave
false false false false 260.000000 [(+) ] 0 52400 45400 180.555557 text
grestore
gsave
false false false false 260.000000 [(3) ] 0 52100 45600 180.555557 text
grestore
gsave
false false false false 260.000000 [(LT1880) ] 0 53000 44800 180.555557 text
grestore
grestore
gsave
false false false false 260.000000 [(U103) ] 0 52900 45600 180.555557 text
grestore
gsave
41700 42500 41700 42700 10 line
41600 42500 41800 42500 10 line
41655 42450 41745 42450 10 line
41680 42410 41720 42410 10 line
grestore
gsave
41200 43000 41200 43200 10 line
41100 43000 41300 43000 10 line
41155 42950 41245 42950 10 line
41180 42910 41220 42910 10 line
grestore
gsave
44600 43200 44600 43400 10 line
44450 43400 44750 43400 10 line
gsave
false false false false 208.000000 [(+5V) ] 0 44475 43450 144.444443 text
grestore
grestore
42200 43200 44600 43200 10 line
gsave
42700 45700 42700 45900 10 line
42550 45900 42850 45900 10 line
gsave
false false false false 208.000000 [(+5V) ] 0 42575 45950 144.444443 text
grestore
grestore
gsave
42800 48500 42800 48700 10 line
42650 48700 42950 48700 10 line
gsave
false false false false 208.000000 [(+5V) ] 0 42675 48750 144.444443 text
grestore
grestore
gsave
45500 49100 45500 49300 10 line
45350 49300 45650 49300 10 line
gsave
false false false false 208.000000 [(+5V) ] 0 45375 49350 144.444443 text
grestore
grestore
gsave
45000 44500 45000 44700 10 line
44850 44700 45150 44700 10 line
gsave
false false false false 208.000000 [(+5V) ] 0 44875 44750 144.444443 text
grestore
grestore
gsave
49100 43500 49100 43700 10 line
48950 43700 49250 43700 10 line
gsave
false false false false 208.000000 [(+5V) ] 0 48975 43750 144.444443 text
grestore
grestore
gsave
47300 46000 47300 46200 10 line
47150 46200 47450 46200 10 line
gsave
false false false false 208.000000 [(+5V) ] 0 47175 46250 144.444443 text
grestore
grestore
gsave
52600 44800 52600 44600 10 line
52750 44600 52450 44600 10 line
gsave
false true false true 208.000000 [(+5V) ] 0 52725 44550 144.444443 text
grestore
grestore
gsave
46800 47800 47000 47800 10 line
gsave
false true false false 260.000000 [(11) ] 0 46800 47900 180.555557 text
grestore
47600 47800 47400 47800 10 line
gsave
false false false false 260.000000 [(10) ] 0 47600 47900 180.555557 text
grestore
47400 47800 47100 48000 10 line
46900 47700 47500 47700 10 line
47500 47700 47500 48100 10 line
47500 48100 46900 48100 10 line
46900 48100 46900 47700 10 line
47200 48300 47200 48100 10 line
gsave
false true false true 260.000000 [(9) ] 0 47400 48300 180.555557 text
grestore
gsave
false false false false 260.000000 [(LTC202) ] 0 46900 47500 180.555557 text
grestore
47050 47802 50 0 360 10 darc
grestore
gsave
false false false false 260.000000 [(U101) ] 0 47500 48300 180.555557 text
grestore
gsave
41200 43200 41500 43200 10 line
gsave
false false false false 260.000000 [(V-) ] 0 41200 43300 180.555557 text
grestore
42200 43200 41900 43200 10 line
gsave
false true false false 260.000000 [(V+) ] 0 42200 43300 180.555557 text
grestore
41500 43000 41900 43000 10 line
41900 43000 41900 43400 10 line
41900 43400 41500 43400 10 line
41500 43400 41500 43000 10 line
41700 42700 41700 43000 10 line
gsave
false false false true 260.000000 [(GND) ] 0 41800 42900 180.555557 text
grestore
gsave
false false false false 260.000000 [(LTC202) (PWR) ] 0 41500 43500 180.555557 text
grestore
grestore
gsave
false false false false 260.000000 [(U101) ] 0 42100 43500 180.555557 text
grestore
gsave
false false false false 260.000000 [(Make same refdes as one of the LTC202 devices) ] 0 40600 41400 180.555557 text
grestore
gsave
false false false false 260.000000 [(Zero ohm resistor to permit a) (unity gain resistor to be used if needed.) ] 0 52400 42900 180.555557 text
grestore
gsave
false false false false 312.000000 [(3) ] 0 51900 40900 216.666672 text
grestore
gsave
43100 42300 43100 42500 10 line
43100 43200 43100 43000 10 line
42900 42700 43300 42700 10 line
42900 42800 43300 42800 10 line
43100 43000 43100 42800 10 line
43100 42700 43100 42500 10 line
newpath
43100 43200
25
0 360 arc
fill
newpath
43100 43200
25
0 360 arc
fill
grestore
gsave
false true false true 260.000000 [(C103) ] 0 42800 42800 180.555557 text
grestore
gsave
false false false false 260.000000 [(0.01uF) ] 0 42400 42400 180.555557 text
grestore
gsave
44400 43200 44400 43000 10 line
gsave
false true false false 208.000000 [(1) ] 270 44450 43050 144.444443 text
grestore
44400 42300 44400 42500 10 line
gsave
false false false false 208.000000 [(2) ] 270 44450 42450 144.444443 text
grestore
44600 42800 44200 42800 10 line
44400 42500 44400 42700 10 line
44400 42800 44400 43000 10 line
44400 42000 700 75 105 10 darc
44600 42911 44500 42911 10 line
44549 42860 44549 42960 10 line
newpath
44400 43200
25
0 360 arc
fill
newpath
44400 43200
25
0 360 arc
fill
grestore
gsave
false false false false 260.000000 [(C104) ] 0 43700 42600 180.555557 text
grestore
gsave
false false false false 260.000000 [(1uF) ] 0 43700 42400 180.555557 text
grestore
gsave
43100 42100 43100 42300 10 line
43000 42100 43200 42100 10 line
43055 42050 43145 42050 10 line
43080 42010 43120 42010 10 line
grestore
gsave
44400 42100 44400 42300 10 line
44300 42100 44500 42100 10 line
44355 42050 44445 42050 10 line
44380 42010 44420 42010 10 line
grestore
newpath
46200 44400
25
0 360 arc
fill
newpath
46200 44400
25
0 360 arc
fill
newpath
46200 44400
25
0 360 arc
fill
newpath
53500 45300
25
0 360 arc
fill
newpath
53500 45300
25
0 360 arc
fill
newpath
53500 45300
25
0 360 arc
fill
newpath
46300 45700
25
0 360 arc
fill
newpath
46300 46900
25
0 360 arc
fill
newpath
46300 45700
25
0 360 arc
fill
newpath
46300 46900
25
0 360 arc
fill
newpath
46300 46900
25
0 360 arc
fill
newpath
46300 45700
25
0 360 arc
fill
newpath
48200 45500
25
0 360 arc
fill
newpath
48200 46900
25
0 360 arc
fill
newpath
48200 45500
25
0 360 arc
fill
newpath
48200 46900
25
0 360 arc
fill
newpath
48200 46900
25
0 360 arc
fill
newpath
48200 45500
25
0 360 arc
fill
newpath
50400 43500
25
0 360 arc
fill
newpath
50400 43500
25
0 360 arc
fill
newpath
50400 43500
25
0 360 arc
fill
newpath
50400 45500
25
0 360 arc
fill
newpath
50400 45500
25
0 360 arc
fill
newpath
50400 45500
25
0 360 arc
fill
newpath
44500 50600
25
0 360 arc
fill
newpath
48000 50600
25
0 360 arc
fill
newpath
44500 50600
25
0 360 arc
fill
newpath
44500 50600
25
0 360 arc
fill
newpath
44500 48500
25
0 360 arc
fill
newpath
47200 49100
25
0 360 arc
fill
newpath
47200 49100
25
0 360 arc
fill
newpath
47200 49100
25
0 360 arc
fill
newpath
44500 48500
25
0 360 arc
fill
newpath
44500 48500
25
0 360 arc
fill
newpath
48000 50600
25
0 360 arc
fill
newpath
48000 50600
25
0 360 arc
fill
newpath
43100 43200
25
0 360 arc
fill
newpath
44400 43200
25
0 360 arc
fill
newpath
43100 43200
25
0 360 arc
fill
newpath
43100 43200
25
0 360 arc
fill
newpath
44400 43200
25
0 360 arc
fill
newpath
44400 43200
25
0 360 arc
fill
showpage
%%End
